<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Amarendra" name="biocept.qa.testcases.MolecularWorkflow" tests="22" failures="0" timestamp="27 Jun 2019 10:19:49 GMT" time="289.110" errors="4">
  <testcase name="NRASPIActivityResult" time="9.541" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="NRASResultingActivityTitle" time="37.174" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="BRAFResultingUpdateResult" time="4.520" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="UploadSequenceImages" time="18.038" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="KRASReportSignoff" time="0.000" classname="biocept.qa.testcases.MolecularWorkflow">
    <error type="java.lang.Throwable" message="Method MolecularWorkflow.KRASReportSignoff()[pri:22, instance:biocept.qa.testcases.MolecularWorkflow@2758fe70] depends on not successfully finished methods">
      <![CDATA[java.lang.Throwable: Method MolecularWorkflow.KRASReportSignoff()[pri:22, instance:biocept.qa.testcases.MolecularWorkflow@2758fe70] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </error>
  </testcase> <!-- KRASReportSignoff -->
  <testcase name="BRAFReportSignoff" time="19.110" classname="biocept.qa.testcases.MolecularWorkflow">
    <error type="org.openqa.selenium.StaleElementReferenceException" message="stale element reference: element is not attached to the page document
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;AMARENDRA&#039;, ip: &#039;10.60.1.107&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_121&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 74.0.3729.6 (255758eccf3d24..., userDataDir: C:\Users\AMAREN~1.SIN\AppDa...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:64751}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 75.0.3770.100, webStorageEnabled: true}
Session ID: d6b7dc6bb4da4c69a65fbbd29bedde91">
      <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AMARENDRA', ip: '10.60.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 74.0.3729.6 (255758eccf3d24..., userDataDir: C:\Users\AMAREN~1.SIN\AppDa...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:64751}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 75.0.3770.100, webStorageEnabled: true}
Session ID: d6b7dc6bb4da4c69a65fbbd29bedde91
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy13.getText(Unknown Source)
	at biocept.qa.utill.WorkflowCommonMethods.completeMessage(WorkflowCommonMethods.java:77)
	at biocept.qa.testcases.MolecularWorkflow.BRAFReportSignoff(MolecularWorkflow.java:394)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </error>
  </testcase> <!-- BRAFReportSignoff -->
  <testcase name="BRAFResultingActivityTitle" time="12.409" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="KRASResultingActivityTitle" time="12.127" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="KRASResultingUpdateResult" time="8.250" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="KRASPIActivityTitle" time="0.000" classname="biocept.qa.testcases.MolecularWorkflow">
    <error type="java.lang.Throwable" message="Method MolecularWorkflow.KRASPIActivityTitle()[pri:20, instance:biocept.qa.testcases.MolecularWorkflow@2758fe70] depends on not successfully finished methods">
      <![CDATA[java.lang.Throwable: Method MolecularWorkflow.KRASPIActivityTitle()[pri:20, instance:biocept.qa.testcases.MolecularWorkflow@2758fe70] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </error>
  </testcase> <!-- KRASPIActivityTitle -->
  <testcase name="KRASSequencingActivityTitle" time="16.360" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="UploadMacroFile" time="5.864" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="BRAFSequencingActivityTitle" time="19.279" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="NRASPIActivityTitle" time="11.393" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="NRASResultingUpdateResult" time="6.785" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="BRAFSequencingActivityResult" time="7.950" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="PlaceNewOrderForMolecular" time="54.058" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="BRAFPIActivityResult" time="7.327" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="KRASPIActivityResult" time="0.000" classname="biocept.qa.testcases.MolecularWorkflow">
    <error type="java.lang.Throwable" message="Method MolecularWorkflow.KRASPIActivityResult()[pri:21, instance:biocept.qa.testcases.MolecularWorkflow@2758fe70] depends on not successfully finished methods">
      <![CDATA[java.lang.Throwable: Method MolecularWorkflow.KRASPIActivityResult()[pri:21, instance:biocept.qa.testcases.MolecularWorkflow@2758fe70] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </error>
  </testcase> <!-- KRASPIActivityResult -->
  <testcase name="NRASReportSignoff" time="22.882" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="KRASSequencingActivityResult" time="8.281" classname="biocept.qa.testcases.MolecularWorkflow"/>
  <testcase name="BRAFPIActivityTitle" time="7.762" classname="biocept.qa.testcases.MolecularWorkflow"/>
</testsuite> <!-- biocept.qa.testcases.MolecularWorkflow -->
